import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
}

group = 'br.com.matheuspadilha'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
	compileJava.options.encoding = 'UTF-8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	buildInfo()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('swaggerVersion', "2.3.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${swaggerVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(KotlinCompilationTask).configureEach {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = targetCompatibility
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
